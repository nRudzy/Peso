# Docker Compose for Peso SaaS - Development Environment
# This file orchestrates all services for local development

services:
  # Backend API
  backend:
    build: ../backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://peso:password@db:5432/peso_dev
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - SMTP_HOST=mailpit
      - SMTP_PORT=1025
      - SMTP_USER=
      - SMTP_PASSWORD=
      - FROM_EMAIL=test@example.com
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ../backend:/app
    networks:
      - peso-network
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ../frontend
      target: development
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost/api
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - peso-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=peso_dev
      - POSTGRES_USER=peso
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - peso-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peso -d peso_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - peso-network
    restart: unless-stopped

  # Database migrations
  migrations:
    build: ../backend
    command: alembic upgrade head
    environment:
      - DATABASE_URL=postgresql://peso:password@db:5432/peso_dev
    depends_on:
      - db
    networks:
      - peso-network

  # Mailpit for email testing
  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - peso-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - peso-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  peso-network:
    driver: bridge
